#!/bin/bash


function createTable()
{	
	arrayOfAttributesNames=()
	arrayOfAttributesTypes=()
	
	read -p "Enter Number Of Attributes :- " attributesNumber
	
	case $attributesNumber in
	+([1-9])) 
		
		for (( i=0; i<attributesNumber; i++ ))
		do
			read -p "Enter Name of '$((i+1))' attribute :- " attributeName
			#checkAttributeName $attributeName
			isvaild=$?
				if (($isvaild==1))
			then
				arrayOfAttributesNames[$i]=$attributeName
				echo -e "What is data type of '$attributeName' \n1-int\t\t 2-string\n"
				read -p "Enter a vaild option " dataTypeOption 
		
				case $dataTypeOption in 
				    1) 
					echo "created '$attributeName' with Data Type 'int' "
					arrayOfAttributesTypes[$i]='int';;
				    2)
					echo "created '$attributeName' with Data Type 'str' " 
					arrayOfAttributesTypes[$i]='str';;
				    *)
					echo -e "Enter a valid Option\nEnter attribute again"
				 	createTable $1 $2 $3;;
				esac
			else
				createTable $1 $2 $3
			fi
			
			
		done ;;
 	*)
 		echo -e "invaild number\nTry again"
 		createTable $1 $2 $3 ;;
	esac		
			 
		
	attributesNames=$(IFS=\|; echo "${arrayOfAttributesNames[*]}")
    	attributesTypes=$(IFS=\|; echo "${arrayOfAttributesTypes[*]}")

	echo "$attributesNames" > ./DataBases/"$1"/"$2"
	echo "$attributesTypes" >> ./DataBases/"$1"/"$2"
	echo "$attributesNames" > ./DataBases/"$1"/"$3"
}


function checkTableName() 
{
	# first vaildation of keywods
	arrayOfKeywords=("SELECT" "INSERT" "DELETE" "UPDATE" "GRANT" "REVOKE" "ADD" "ALTER" "COLUMN" "TABLE" "ROW" "FROM" "AND" "OR" "AS" "DROP" "HAVING" "WHERE" "EXIT")
	
	read -p "Enter Table Name ;- " tableName
	
	if [[ -f ./DataBases/"$1"/"$tableName" ]];
	then
		echo -e "\t :):):) ------------ '$tableName' TABLE Already Exists ----------- :(:(:( "
		checkTableName $1
	else
		#check if the user input is a keyword------------
		for i in ${arrayOfKeywords[@]}
		do
			upperTableName=`echo $tableName | tr '[a-z]' '[A-Z]'`
			if [[ $upperTableName == $i ]];then
			        echo "Sorry Reserved word"
			        #handle menu here  			            
			fi		
		done
		
		#echo -e "\t!!!!!!!! $tableName !!!!!!!!!!!"

		if [[ $tableName =~ ^[a-zA-Z]+[a-zA-Z0-9_]*$ ]];then
			touch ./DataBases/"$1"/."$tableName".metadata
			touch ./DataBases/"$1"/"$tableName"	
			createTable  $1 ."$tableName".metadata $tableName
		else
			echo "invaild name"
			checkTableName $1
		fi
	fi
}


function tableStart()
{


		read -p "Enter the database name to connect: " dbName

		#Now we check if the this data base name is already there
		if [[ -d ./DataBases/$dbName ]];then
		    echo -e "\n\t------ Connected Succesfully to '$dbName' DataBases ------\n"
		    
		    echo -e "\t\t\t1-List Tables\n\t2-Create Table\t\t 3-Drop Table\n\t4-Insert Into Table\t 5-Select From Table\t\n\t6-Delete From Table\t 7-Update Table\n" 
		    read -p "Enter table option :- " optionNumber
			   
		   case $optionNumber in 
		    1)
		   	echo -e "\t------- Listing Tables ------- "
		   		 ls ./DataBases/"$dbName"
				tableStart	
				 ;; 
		   2)
		   	echo -e "\t------- Create table -------"
		   	checkTableName $dbName;;
		   3)
		   	echo -e "\t------- Drop table -------\nEnter Table name:- ";;
		   	#dropTable $dbName;;
		   	
		   4)
		   	echo -e "\t------- Insert Into Table -------\nEnter Table name:- ";;
		   	#insertInto $dbName;;
		   5)
		   	echo -e "\t------- Select From Table -------\nEnter Table name:- ";;
		   	#selectFromTable $dbName;;
		   6)
		   	echo -e "\t------- Delete From Table -------\nEnter Table name:- ";;
			#deleteFromTable $dbName;;
		   7)	
		   	echo -e "\t------- Update Table -------\nEnter Table name:- ";;
			#updateFromTable $dbName;;
		   *)
		   	echo -e "\n!!!!!! ------ Enter vaild option !!!!!! ------ "
		   	#tableStart	
		   	
	   	esac
	   else
	   	echo ":):):)------------Database do not exist------------:) :) :)"
	   	tableStart
	   fi
}

tableStart
